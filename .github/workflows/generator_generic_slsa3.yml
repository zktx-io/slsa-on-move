name: SLSA 3+

on:
  workflow_call:
    inputs:
      move-compiler:
        description:
          'Select a CLI to compile the Move language. Examples include tools such as `aptos` and `sui`.'
        required: true
        type: string
      move-directory:
        description:
          'The root directory of the Move project refers to the directory containing the Move.toml file.'
        required: true
        type: string
    outputs:
      package-name:
        description: "The name of the package."
        value: ${{ jobs.build.outputs.package-name }}
      package-framework:
        description: "The name of the network where the package is deployed."
        value: ${{ jobs.build.outputs.package-framework }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.compile.outputs.package-name }}
      package-framework: ${{ steps.compile.outputs.package-framework }}
      base64-subjects: ${{ steps.compile.outputs.base64-subjects }}
    permissions:
      actions: read
      contents: write
      id-token: write
    steps:
      - name: Build Move
        id: compile
        uses: 'zktx-io/slsa-on-move@main'
        with:
          move-compiler: ${{ inputs.move-compiler }}
          move-directory: ${{ inputs.move-directory}}

  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: ${{ needs.build.outputs.base64-subjects }}
      upload-assets: true

  deploy:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "provenance.intoto.jsonl"
          path: "."

      - name: Ready to sign transaction
        id: ready-to-sign
        run: |
          provenance_base64=$(base64 -w 0 provenance.intoto.jsonl)
          RESPONSE=$(curl --silent -X POST "https://create-jx4b2hndxq-uc.a.run.app" \
            -H "Content-Type: application/json" \
            -d '{
                  "name": "${{ needs.build.outputs.package-name }}",
                  "network":"${{ needs.build.outputs.package-framework }}",
                  provenance: "'"${provenance_base64}"'"
                }')
          PARSED_UID=$(echo $RESPONSE | jq -r '.uid')
          echo "uid=$PARSED_UID" >> $GITHUB_OUTPUT

      - name: Download project artifact
        uses: actions/download-artifact@v4
        with:
          name: project
          path: "./project"
  
      - name: upload project
        run: |
          tar -C ./project -cf - . | gzip > ${{ steps.ready-to-sign.outputs.uid }}
          response=$(curl --silent -X POST https://upload-jx4b2hndxq-uc.a.run.app \
            -H "Content-Type: multipart/form-data" \
            -F "file=@${{ steps.ready-to-sign.outputs.uid }};filename=${{ steps.ready-to-sign.outputs.uid }};type=application/gzip")
          if [[ "$response" != "File uploaded successfully." ]]; then
            echo "Error uploading the file"
            exit 1
          fi

      - name: Visit this URL to sign transaction
        run: |
          API_URL="https://slsa.zktx.io?q=${{ steps.ready-to-sign.outputs.uid }}"
          echo "API_URL=$API_URL" >> $GITHUB_OUTPUT
          echo "::notice title=API URL::[Click here to sign transaction]($API_URL)"
